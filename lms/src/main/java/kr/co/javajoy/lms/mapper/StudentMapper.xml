<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.javajoy.lms.mapper.StudentMapper">
	<select id="totalStudent"
			resultType="int">
		SELECT 
			COUNT(member_id) studentCount 
		FROM student		
	</select>
	
	<select id="totalStudentOfMan"
			resultType="int">
		SELECT 
			COUNT(member_id) manCount 
		FROM student
		WHERE student_gender = '남'
	</select>
	
	<select id="totalStudentOfWoman"
			resultType="int">
		SELECT 
			COUNT(member_id) womanCount 
		FROM student
		WHERE student_gender = '여'
	</select>
	
	<select id="selectStudentOne"
			parameterType="String"
			resultType="java.util.Map">
		SELECT
			 s.member_id memberId
			,s.student_name studentName
			,s.student_gender studentGender
			,s.student_phone studentPhone
			,s.student_address studentAddress
			,s.student_detailaddress studentDetailAddress
			,s.student_email studentEmail
			,s.student_education studentEducation
			,s.student_register_date studentRegisterDate
			,mp.member_photo_name memberPhotoName
		FROM student s
   LEFT JOIN member_photo mp
   		  ON s.member_id = mp.member_id
  WHERE s.member_id = #{memberId}
	</select>

	<update id="updateStudentOne"
			parameterType="String">
		UPDATE student SET 
			student_name = #{studentName}
			,student_gender = #{studentGender}
			,student_phone = #{studentPhone}
			,student_email = #{studentEmail}
			,student_education = #{studentEducation}
			,student_address = #{studentAddress}
			,student_detailaddress = #{studentDetailAddress}
			,update_date = NOW()
		WHERE member_id = #{memberId}
	</update>
	
	<select id="selectEmploytedStudentList"
			parameterType="java.util.Map"
			resultType="java.util.Map">
		SELECT s.member_id memberId
				,s.student_name studentName
				,company company
				,start_salary startSalary
				,sj.create_date createDate
				,sj.update_date updateDate
		FROM student_job sj
		INNER JOIN student s ON s.member_id = sj.member_id
		<if test='searchName != null and !"".equals( searchName ) '>
		WHERE 
			CONCAT( '%', s.student_name, '%' ) 
			LIKE CONCAT( '%', #{searchName} , '%' )
		</if>
	</select>
	
	<select id="totalEmployedStudent"
			resultType="int">
		SELECT 
			COUNT(member_id) count 
		FROM student_job
	</select>
	
	<insert id="insertEmployedStudent"
			parameterType="kr.co.javajoy.lms.vo.StudentJob">
		INSERT INTO student_job	(
			member_id
			,company
			,start_salary
			,create_date
			,update_date
		) VALUES(
			#{memberId}
			,#{company}
			,#{startSalary}
			,NOW()
			,NOW()		
		)	
	</insert>
	
	<delete id="deleteEmployedStudent">
		DELETE FROM student_job
		 WHERE member_id = #{memberId}
	</delete>
	
	<select id="selectEmployedStudentOne"
			parameterType="String"
			resultType="kr.co.javajoy.lms.vo.StudentJob">
		SELECT member_id memberId
				,company company
				,start_salary startSalary
				,create_date createDate
				,update_date updateDate
		FROM student_job
		WHERE member_id= #{memberId}
	</select>
	
	<update id="updateEmployedStudent"
			parameterType="kr.co.javajoy.lms.vo.StudentJob">
		UPDATE student_job 
		SET company = #{company}
			,start_salary = #{startSalary}
			, update_date = NOW()
		WHERE member_id = #{memberId}		
	</update>
	
	<select id="studentEducationRate"
			resultType="java.util.Map">
		SELECT
			student_education studentEducation
			,COUNT(student_education) educationCount
		from student
		GROUP BY student_education
	</select>
	
	<select id="employedStudentFirstSalaryRate"
			resultType="java.util.Map">
			SELECT 
				COUNT(case when <![CDATA[ start_salary < 2000 ]]> then 1 END ) salarayOne
				,COUNT(case when (<![CDATA[ start_salary >= 2000 ]]>) AND (<![CDATA[ start_salary < 3000 ]]>) then 1 END ) salarayTwo
				,COUNT(case when (<![CDATA[ start_salary >= 3000 ]]>) AND (<![CDATA[ start_salary < 3500 ]]>) then 1 END ) salarayThree
				,COUNT(case when (<![CDATA[ start_salary >= 3500 ]]>) AND (<![CDATA[ start_salary < 4000 ]]>) then 1 END ) salarayFour
				,COUNT(case when (<![CDATA[ start_salary >= 4000 ]]>)then 1 END ) salarayFive
			FROM student_job
	</select>
</mapper>