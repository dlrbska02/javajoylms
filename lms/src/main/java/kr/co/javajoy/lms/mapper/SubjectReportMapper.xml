<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.javajoy.lms.mapper.SubjectReportMapper">
	
	<!-- 1) 과제 게시판 글 리스트 출력 -->
	
	<!-- 과제 게시판 글 총 개수 -->
	<select id="selectTotalCount"
			resultType="int">
		SELECT COUNT(*) FROM subject_report
	</select>
	<!-- 과제 게시판 글 리스트 출력 -->
	<select id="selectSubjectReportListByPage"
			parameterType="java.util.Map"
			resultType="kr.co.javajoy.lms.vo.SubjectReport">
		SELECT 
			b.subject_board_no subjectBoardNo
			,s.subject_no subjectNo
			,r.subject_report_no subjectReportNo
			,s.subject_name subjectName
			,r.member_id memberId
			,t.teacher_Name teacherName 	
			,r.subject_report_title subjectReportTitle
			,r.subject_report_content subjectReportContent
			,r.subject_report_period subjectReportPeriod 
			,r.create_date createDate
		FROM subject_board AS b 
		LEFT JOIN subject_report AS r ON r.subject_report_no = b.subject_board_no
		LEFT JOIN subject AS s ON s.subject_no = b.subject_no
		LEFT JOIN teacher AS t ON t.member_id = r.member_id
		WHERE b.subject_no = #{subjectNo}
		ORDER BY b.create_date DESC
		LIMIT #{startRow}, #{rowPerPage}
	</select>
	
	<!-- 2) 과제 게시판 글 상세보기 + 파일 이름 리스트 출력 + 댓글 리스트 출력 -->
	
	<!-- 과제 게시판 상세보기 -->
	<select id="selectSubjectReportOne"
			parameterType="int"
			resultType="kr.co.javajoy.lms.vo.SubjectReport">
		SELECT 
			b.subject_board_no subjectBoardNo
			,r.subject_report_no subjectReportNo
			,b.subject_no subjectNo
			,s.subject_name subjectName
			,r.member_id memberId 
			,t.teacher_Name teacherName 	
			,r.subject_report_title subjectReportTitle
			,r.subject_report_content subjectReportContent
			,r.subject_report_period subjectReportPeriod
			,r.create_date createDate
		FROM subject_board AS b
		LEFT JOIN subject_report AS r ON r.subject_report_no = b.subject_board_no
		LEFT JOIN subject AS s ON s.subject_no = b.subject_no
		LEFT JOIN teacher AS t ON t.member_id = r.member_id
		WHERE b.subject_board_no = #{subjectBoardNo};
	</select>
	<!-- 과제 게시판 상세보기에 파일 이름으로된 리스트 출력 -->
	<select id="selectSubjectReportFileNameList"
			parameterType="int"
			resultType="String">
		SELECT
			f.subject_file_name subjectFileName
		FROM subject_board AS b
		LEFT JOIN subject_file AS f ON f.subject_file_board_no = b.subject_board_no
		WHERE f.subject_board_no = #{subjectBoardNo};
	</select>
	<!-- 과제 게시판 상세보기 파일 리스트 출력 -->
	<select id="selectSubjectReportFileList"
			parameterType="int"
			resultType="kr.co.javajoy.lms.vo.SubjectFile">
		SELECT f.subject_file_original_name subjectFileOriginalName
			  ,f.subject_file_name subjectFileName
			  ,f.subject_file_type subjectFileType
			  ,f.subject_file_size subjectFileSize
			  ,b.subject_board_no subjectBoardNo
			  ,f.subject_file_no subjectFileNo
		FROM subject_file AS f
		LEFT JOIN subject_board AS b ON f.subject_file_board_no = b.subject_board_no
		WHERE b.subject_board_no = #{subjectBoardNo};
	</select>
	<!-- 글 하나당 댓글 총 개수 -->
	<select id="selectCommentTotalCountBySubjectReport"
			parameterType="int"
			resultType="int">
		SELECT COUNT(*) 
		FROM subject_report_comment AS c
		LEFT JOIN subject_board AS b ON c.subject_report_no = b.subject_board_no
		WHERE subject_board_no = #{subjectBoardNo};
	</select>
	<!-- 과제 게시판 상세보기 댓글 리스트 출력 -->
	<select id="selectCommentListByPage"
			parameterType="java.util.Map"
			resultType="kr.co.javajoy.lms.vo.SubjectReportComment">
		SELECT c.member_id memberId
      		   ,c.subject_report_comment_content subjectReportCommentContent
      		   ,c.create_date createDate
               ,c.update_date updateDate
		FROM subject_report_comment AS c
		LEFT JOIN subject_board AS b ON c.subject_report_no = b.subject_board_no
		WHERE subject_board_no = #{subjectBoardNo}
		ORDER BY b.create_date DESC
		LIMIT #{startRow}, #{commentRowPerPage};
	</select>
	
	<!-- 3) 과제 게시판 글 입력 + 파일 입력 -->
	
	<!-- subject_board 글 입력 -->
	<insert id="insertSubjectBoard" 
			parameterType="kr.co.javajoy.lms.vo.SubjectReport">
		 <selectKey resultType="int" keyProperty="subjectBoardNo" order="AFTER">
				select last_insert_id()
		 </selectKey>
		INSERT INTO subject_board (
			subject_no
			,create_date
		) VALUES (
			#{subjectNo}
			,NOW()
		)
	</insert>
	<!-- 과제 게시판 글 입력 -->
	<insert id="insertSubjectReport" 
			parameterType="kr.co.javajoy.lms.vo.SubjectReport">
		INSERT INTO subject_report (
			member_id
			,subject_report_title
			,subject_report_content
			,subject_report_period
			,create_date
		) VALUES (
			#{memberId}
			,#{subjectReportTitle}
			,#{subjectReportContent}
			,#{subjectReportPeriod}
			,NOW()
		)
	</insert>
	<!-- 과제 게시판 파일 입력 -->
	<insert id="insertSubjectFile"
			parameterType="kr.co.javajoy.lms.vo.SubjectFile">
		INSERT INTO subject_file (
			subject_file_board_no
			,subject_file_name
			,subject_file_original_name
			,subject_file_type
			,subject_file_size
			,create_date
			,update_date
		) VALUES (
			#{subjectFileBoardNo}
			,#{subjectFileName}
			,#{subjectFileOriginalName}
			,#{subjectFileType}
			,#{subjectFileSize}
			,NOW()
			,NOW()
		)
	</insert>
	
	<!-- 4) 과제 게시판 글 수정 + 파일 수정 -->
	
	<!-- 과제 게시판 글 수정 -->
	<update id="updateSubjectReport"
			parameterType="kr.co.javajoy.lms.vo.SubjectReport">
		UPDATE subject_report AS r 
		LEFT JOIN subject_board AS b ON r.subject_report_no = b.subject_board_no
		SET 
			b.subject_board_no = #{subjectBoardNo}
			,b.subject_no = #{subjectNo}
			,r.member_id = #{memberId}
			,r.subject_report_title = #{subjectReportTitle}
			,r.subject_report_period = #{subjectReportPeriod}
			,r.subject_report_content = #{subjectReportContent}
		WHERE subject_board_no = #{subjectBoardNo}
	</update>
	
	<!-- 과제 게시판 파일 삭제 시, 파일 이름으로 된 리스트 출력 -->
	<select id="selectSubjectFileNameListBySubjectFileNo"
			parameterType="int"
			resultType="String">
		SELECT subject_file_name subjectFileName
		FROM subject_file
		WHERE subject_file_no = #{subjectFileNo}
	</select>
	
	<!-- 과제 게시판 파일 삭제 -->
	<delete id="deleteSubjectFile"
			parameterType="int">
		DELETE FROM subject_file
		WHERE subject_file_no = #{subjectFileNo}
	</delete>
	
	<!-- 5) 과제 게시판 댓글  -->
	
	<!-- 과제 게시판 댓글 입력 -->
	<insert id="insertSubjectReportComment"
			parameterType="kr.co.javajoy.lms.vo.SubjectReportComment">
		INSERT INTO subject_report_comment (
			subject_report_no
			,member_id
			,subject_report_comment_content
			,create_date
			,update_date 
		) VALUES (
			#{subjectReportNo}
			,#{memberId}
			,#{subjectReportCommentContent}
			,NOW()
			,NOW()
		)
	</insert>
	<!-- 과제 게시판 댓글 삭제 -->
	
	<!--  과제 게시판 글 삭제 시, 댓글 모두 삭제 -->
</mapper>













































































